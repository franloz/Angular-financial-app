Firebase de forma local con Firebase Local Emulator Suite:
//video q he visto para estos pasos https://youtu.be/B0-Rl5Vy4Fs?si=livvSxy9fzsS5cbq
1. npm install -g firebase-tools
2. firebase login
3. ng add @angular/fire
4. firebase init
    auth: 9099
    firestore: 8080
5. para subir los cambios de local a produccion:
    firebase deploy
    si solo quiero subir el firestore.rules:
    firebase deploy --only firestore:rules
6. añadir en environment.ts la variable useEmulators: true y cuando queramos hacerlo para prod poner false
7. hacemos los ajustes necesarios en app.module.ts para saber cuando estamos corriendo en dev y cuando en prod y ejecutar la app en local o prod
8. firebase emulators:start, esto hace q funcione todo
9. se añade el script "startFirebaseEmulator": "firebase emulators:start --import=emulator-data" en package.json para iniciar el emulador importando los datos de la base de datos del directorio con ellos
10. se añade el script "exportFirestoreData": "firebase emulators:export emulator-data" en package.json para exportar los datos de la base de datos antes de parar la emulacion

APIKEY_FINANCIAL_MODELING_PREP: "rXAvplbA5PCsIjGIiekI1AjDDxwPDOVN",

//si añado en el dockerignore el .env, luego le tendria q pasar los parametros al correr el contenedor

//añadir test en un futuro  https://youtu.be/B0-Rl5Vy4Fs?si=UW1mT8rbBrSGcYDz



Git
git pull origin main
git push origin nombre-rama

//ver opcion de desactivar hover y animaciones del navegador de video midu




<!--poner captcha-->
<!--mobile first havee-->
///poner un lazyload para todo en modulo shared
poner el lazyload para cuando inicio sesion y register, ver como lo hacen otras paginas
fotgot password
dialog para poner apikey y guardar apikey en algun sitio
/////cuando acabe funcionalidad form hacer diseño y responsive y optimizar codigo plantearme no repetir las funciones de verificacion en los ts
//apuntar el remember me para futuros form de auth

en firebase una coleccion es una tabla y un docmento un registro

pedir la apikey en el registro explicando por que es necesARIA y al registrar al user, comprobar q apikey es correcta haciendo na llamada a la api y si devuelve data es correcta y no salta warning, si es incorrecta salta warning de q apikey es incorrecta, al metodo registeruser envio el email y contraseña y eso iria para eel auth(puedo hacer interfaz con esos dos q sea userauth), en la collection(users) metere un registro(doc) cuyo nombre del doc sera el uid del user, y dentro de el estara la apikey, q deberia cifrar entiendo. A registerUser tmb la pasare apikey q se guardara en tabla users despues de registrar user, poner lazyload minetra hace llamsda a api para verificar q funciona

Hacer un validador custom para la llamada a la api
en auth he hecho un componente logout que sera un boton y tendre q hacer otro componente q sea el panel de usuario donde ver la apikey gmail y demas, aunque no se si este panel de user deberia ir en shared o en otro modulo puesto q no es auth en si

//Attribution is required for all users. It is as simple as putting “Data provided by Financial Modeling Prep” somewhere on your site or app and linking that text to https://financialmodelingprep.com/developer/docs/. In case of limited screen space, or design constraints, the attribution link can be included in your terms of service.

////////////hacer push crear otra rama para hacer cambios en finance




hacer paginacion en el market, y lo de elegir moneda e idioma en header

paginas seran:
/portfolio
/watchlist
/   --sera el market
/activos/apple


header con buscador, idioma, moneda, y market, portfolio, watchlist , modo oscuro, ventanilla para cerrar sesion y estos ajustes en movil, terminos de uso , politica de privacidad

poner cookies del user y redes sociales en footer no se

Componentes de finance



//todo. configurar componente con mensaje de limite consultas a api y seguir con array de pruebas, poner paginacion en notion

      ///todo. variable global q sea un contador para ver cuantas veces se llama a api
